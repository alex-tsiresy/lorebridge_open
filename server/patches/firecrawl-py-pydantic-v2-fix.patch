--- a/firecrawl/v2/types.py
+++ b/firecrawl/v2/types.py
@@ -300,6 +300,21 @@ class ScrapeOptions(BaseModel):
             return v
         raise ValueError(f"Invalid formats type: {type(v)}. Expected ScrapeFormats or List[FormatOption]")
 
+    @field_validator('parsers')
+    @classmethod
+    def validate_parsers(cls, v):
+        """Validate and normalize parsers input."""
+        if v is None:
+            return v
+        
+        normalized_parsers = []
+        for parser in v:
+            if isinstance(parser, str):
+                normalized_parsers.append(parser)
+            elif isinstance(parser, dict):
+                normalized_parsers.append(PDFParser(**parser))
+            elif isinstance(parser, PDFParser):
+                normalized_parsers.append(parser)
+            else:
+                raise ValueError(f"Invalid parser format: {parser}")
+        
+        return normalized_parsers
+
 class ScrapeRequest(BaseModel):
     """Request for scraping a single URL."""
     url: str
@@ -580,6 +595,7 @@ class SearchRequest(BaseModel):
         
         return normalized_categories
 
+
 class LinkResult(BaseModel):
     """A generic link result with optional metadata (used by search and map)."""
     url: str