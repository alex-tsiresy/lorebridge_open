"""add cascade delete to edges

Revision ID: 2dba6d7351bd
Revises: 3ea31480e540
Create Date: 2025-07-12 20:21:53.848862

"""

from collections.abc import Sequence

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2dba6d7351bd"
down_revision: str | None = "3ea31480e540"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("edges_graph_id_fkey", "edges", type_="foreignkey")
    op.drop_constraint("edges_source_node_id_fkey", "edges", type_="foreignkey")
    op.drop_constraint("edges_target_node_id_fkey", "edges", type_="foreignkey")
    op.create_foreign_key(
        None, "edges", "nodes", ["target_node_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "edges", "nodes", ["source_node_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "edges", "graphs", ["graph_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "edges", type_="foreignkey")
    op.drop_constraint(None, "edges", type_="foreignkey")
    op.drop_constraint(None, "edges", type_="foreignkey")
    op.create_foreign_key(
        "edges_target_node_id_fkey", "edges", "nodes", ["target_node_id"], ["id"]
    )
    op.create_foreign_key(
        "edges_source_node_id_fkey", "edges", "nodes", ["source_node_id"], ["id"]
    )
    op.create_foreign_key(
        "edges_graph_id_fkey", "edges", "graphs", ["graph_id"], ["id"]
    )
    # ### end Alembic commands ###
