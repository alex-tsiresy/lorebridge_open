"""Add PDF processing fields to Asset model

Revision ID: ac6a8b575ed6
Revises: 5748a7b596c1
Create Date: 2025-07-19 16:14:31.953499

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ac6a8b575ed6"
down_revision: str | None = "5748a7b596c1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the DocumentType enum first
    op.execute("CREATE TYPE documenttype AS ENUM ('short', 'long')")

    op.add_column(
        "asset",
        sa.Column(
            "extracted_text",
            sa.Text(),
            nullable=True,
            comment="Full extracted text content from PDF",
        ),
    )
    op.add_column(
        "asset",
        sa.Column(
            "token_count",
            sa.Integer(),
            nullable=True,
            comment="Number of tokens in the document",
        ),
    )
    op.add_column(
        "asset",
        sa.Column(
            "document_type",
            sa.Enum("short", "long", name="documenttype"),
            nullable=True,
            comment="Classification: short (<=15k tokens) or long (>15k tokens)",
        ),
    )
    op.add_column(
        "asset",
        sa.Column(
            "summary",
            sa.Text(),
            nullable=True,
            comment="AI-generated summary of the document",
        ),
    )

    # Fix the session_id column type conversion with explicit casting
    op.execute(
        "ALTER TABLE llm_messages ALTER COLUMN session_id TYPE UUID USING session_id::uuid"
    )
    op.create_foreign_key(None, "llm_messages", "chat_sessions", ["session_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "llm_messages", type_="foreignkey")
    # Revert the session_id column type
    op.execute("ALTER TABLE llm_messages ALTER COLUMN session_id TYPE VARCHAR")
    op.drop_column("asset", "summary")
    op.drop_column("asset", "document_type")
    op.drop_column("asset", "token_count")
    op.drop_column("asset", "extracted_text")

    # Drop the DocumentType enum
    op.execute("DROP TYPE IF EXISTS documenttype")
    # ### end Alembic commands ###
